{"includeInGlobalSearch": true, "url":"https://docs.mongodb.com/bi-connector/current/","documents":[{"slug":"components/","headings":[],"text":"MongoDB Connector for BI Components\n\nChanged in version 2.0: Version 2.0 of the MongoDB Connector for BI introduces a new architecture that replaces\nthe previous PostgreSQL foreign data wrapper with the new\nmongosqld.\nAs a result, the MongoDB Connector for BI no longer requires mongobiuser and\nmongobischema.\nIf you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0\nby following the steps in Installation.\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nThe MongoDB Connector for BI provides a suite of configuration tools.\n\nmongodrdl generates database schema information for use\nwith the MongoDB Connector for BI.\nmongosqld proxies incoming queries between a MySQL client\nand a MongoDB server.\n\n\n\nmongodrdl\nmongosqld\n\n\n\n\n                \n    \n      ←  \n      Using the MongoDB Connector for BI with Atlas\n      mongodrdl\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"MongoDB Connector for BI Components","preview":"Changed in version 2.0: Version 2.0 of the MongoDB Connector for BI introduces a new architecture that replaces\nthe previous PostgreSQL foreign data wrapper with the new\nmongosqld. As a result, the Mo","tags":""},{"slug":"faq/","headings":[],"text":"FAQ: The MongoDB Connector for BI\n\nOn this page\n\nHow do I authenticate with the MongoDB Connector for BI?\nDoes the MongoDB Connector for BI store any data?\nHow are queries processed?\nHow do I skip data incompatible with my DRDL type definition?\nIs there any syntax validation tool for DRDL?\nHow does the MongoDB Connector for BI process dates?\nHow do I use TLS/SSL with the MongoDB Connector for BI?\n\n\n\nHow do I authenticate with the MongoDB Connector for BI?¶\n\nChanged in version 2.0: Prior to version 2.0, the MongoDB Connector for BI stored its own separate set of\ncredentials.\nIf you are using an older release of the MongoDB Connector for BI, you should upgrade to 2.0\nby following the steps in Installation.\n\nWhen connecting to a MongoDB deployment using\nauthentication, you can\nauthenticate as the users and roles configured in that deployment.\nSee Authentication for details on how to specify\nyour authentication source and mechanism.\n\n\nDoes the MongoDB Connector for BI store any data?¶\nThe MongoDB Connector for BI instance only transforms SQL queries into\nMongoDB queries. It does not store any data itself.\nWhen starting mongosqld, you provide it a\nDRDL file describing the schema of your\ndata.\n\n\nHow are queries processed?¶\nThe MongoDB Connector for BI constructs an aggregation\npipeline that allows the MongoDB server to execute many SQL\nexpressions.\nmongosqld always enables the\naggregate allowDiskUse\noption.\nThe MongoDB Connector for BI cannot map some supported SQL constructs into an\naggregation equivalent. In this case, the MongoDB Connector for BI will execute those\nconstructs in memory.\n\n\nHow do I skip data incompatible with my DRDL type definition?¶\n\nUsing MongoDB 3.4 Views¶\nMongoDB 3.4 introduces Read-Only Views that you can\nuse to filter incompatible data.\nFor example, you can create a view in the test database that contains\nonly documents containing a number in the grade field of a grades\ncollection:\ndb.runCommand( { create: \"numericGrades\", viewOn: \"grades\", pipeline: [ { \"$match\": { \"grade\": { \"$type\": \"number\" } } } ] } )\n\n\nYou can then use mongodrdl to generate a schema from this view\nas you would a collection:\nmongodrdl -d test -c numericGrades\n\n\n\n\nUsing a DRDL Filter¶\nIf documents in a collection contain different data types for a field,\nyou may filter for a specific data type. To accomplish this, you can\ninclude a $match stage at the beginning of the pipeline in\nyour DRDL table definition.\nFor example, to match only documents containing a number in the grade field,\nuse the following pipeline stage:\n\"$match\": { \"grade\": { \"$type\": \"number\" } }\n\n\nIf you are unwinding an array field that contains\ndifferent data types, then to filter the array for a specific data type, put\nthe $match stage after the $unwind.\n\nSee also\nHeterogeneous data types\n\n\n\n\nIs there any syntax validation tool for DRDL?¶\nDRDL files use the YAML syntax. Any\nYAML validator such as https://yaml-online-parser.appspot.com/ can help you\ncheck your DRDL files.\n\n\nHow does the MongoDB Connector for BI process dates?¶\nThe MongoDB Connector for BI will correctly process BSON date data\nby mapping it to the SQL datetime type. For example:\ndb.data.save({ date: new Date() })\n\n\nIf you store date data as a string, the MongoDB Connector for BI treats it as a string\nrather than as a date. For example, MongoDB Connector for BI treats the following as a\nstring:\ndb.data.save({ date: '32-FEB-2015' })\n\n\n\n\nHow do I use TLS/SSL with the MongoDB Connector for BI?¶\nThe connection between mongosqld and your MongoDB deployment\nhas TLS/SSL configured separately from the connection between your MySQL\nclient and mongosqld.\n\nConnecting mongosqld to MongoDB¶\nIf the MongoDB instance you are connecting to uses\nTLS/SSL, provide\nthe --mongo-ssl option to mongosqld.\nFor example:\nmongosqld --schema=schema.drdl --mongo-ssl\n\n\nTo specify a TLS/SSL CA root certificate, use the --mongo-sslCAFile\noption. To specify a client certificate, use the --mongo-sslPEMKeyFile\noption. For example:\nmongosqld --schema=schema.drdl \\\n          --mongo-ssl \\\n          --mongo-sslCAFile=/certs/ca.pem \\\n          --mongo-sslPEMKeyFile=/certs/mongodb_client.pem\n\n\n\n\nConnecting a client to mongosqld¶\nTo specify a TLS/SSL CA root certificate, use the --sslCAFile\noption. To specify a client certificate, use the --sslPEMKeyFile\noption. For example:\nmongosqld --schema=schema.drdl \\\n          --sslCAFile=/certs/ca.pem \\\n          --sslPEMKeyFile=/certs/mysql_client.pem\n\n\n\n\n\n\n                \n    \n      ←  \n      mongosqld\n      Release Notes for MongoDB Connector for BI\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"FAQ: The MongoDB Connector for BI","preview":"On this page Changed in version 2.0: Prior to version 2.0, the MongoDB Connector for BI stored its own separate set of\ncredentials. If you are using an older release of the MongoDB Connector for BI, y","tags":""},{"slug":"genindex/","headings":[],"text":"Index\n\n\n Symbols\n | C\n | M\n | N\n | P\n | R\n | S\n \n\nSymbols\n\n  \n      \n    --addr\n\n      \n        command line option\n\n      \n      \n    --auth\n\n      \n        command line option\n\n      \n      \n    --authenticationDatabase <dbname>\n\n      \n        command line option\n\n      \n      \n    --authenticationMechanism <name>\n\n      \n        command line option\n\n      \n      \n    --collection <collection>, -c <collection>\n\n      \n        command line option\n\n      \n      \n    --config <path>\n\n      \n        command line option\n\n      \n      \n    --customFilterField <name>, -f <name>\n\n      \n        command line option\n\n      \n      \n    --db <database>, -d <database>\n\n      \n        command line option\n\n      \n      \n    --defaultAuthDatabase <database>\n\n      \n        command line option\n\n      \n      \n    --defaultAuthMechanism <authMechanism>\n\n      \n        command line option\n\n      \n      \n    --filePermissions <mode>\n\n      \n        command line option\n\n      \n      \n    --gssapiHostName <host-name>\n\n      \n        command line option\n\n      \n      \n    --gssapiServiceName <service-name>\n\n      \n        command line option\n\n      \n      \n    --help\n\n      \n        command line option, [1]\n\n      \n      \n    --host <hostname><:port>, -h <hostname><:port>\n\n      \n        command line option\n\n      \n      \n    --logAppend\n\n      \n        command line option\n\n      \n      \n    --logPath <filename>\n\n      \n        command line option\n\n      \n      \n    --mongo-ssl\n\n      \n        command line option\n\n      \n      \n    --mongo-sslAllowInvalidCertificates\n\n      \n        command line option\n\n      \n      \n    --mongo-sslCAFile <filename>\n\n      \n        command line option\n\n      \n      \n    --mongo-sslFIPSMode\n\n      \n        command line option\n\n      \n      \n    --mongo-sslPEMKeyFile <filename>\n\n      \n        command line option\n\n      \n      \n    --mongo-sslPEMKeyPassword <password>\n\n      \n        command line option\n\n      \n      \n    --mongo-uri <uri>\n\n      \n        command line option\n\n      \n  \n  \n      \n    --noUnixSocket\n\n      \n        command line option\n\n      \n      \n    --out <path>, -o <path>\n\n      \n        command line option\n\n      \n      \n    --password <password>, -p <password>\n\n      \n        command line option\n\n      \n      \n    --port <port>\n\n      \n        command line option\n\n      \n      \n    --preJoined\n\n      \n        command line option\n\n      \n      \n    --quiet\n\n      \n        command line option, [1]\n\n      \n      \n    --sampleSize <size>, -s <size>\n\n      \n        command line option\n\n      \n      \n    --schema <filename>\n\n      \n        command line option\n\n      \n      \n    --schemaDirectory <directoryname>\n\n      \n        command line option\n\n      \n      \n    --ssl\n\n      \n        command line option\n\n      \n      \n    --sslAllowInvalidCertificates\n\n      \n        command line option, [1]\n\n      \n      \n    --sslAllowInvalidHostnames\n\n      \n        command line option\n\n      \n      \n    --sslCAFile <filename>\n\n      \n        command line option, [1]\n\n      \n      \n    --sslCRLFile <filename>\n\n      \n        command line option\n\n      \n      \n    --sslFIPSMode\n\n      \n        command line option\n\n      \n      \n    --sslPEMKeyFile <filename>\n\n      \n        command line option, [1]\n\n      \n      \n    --sslPEMKeyPassword <password>\n\n      \n        command line option, [1]\n\n      \n      \n    --unixSocketPrefix <path>\n\n      \n        command line option\n\n      \n      \n    --username <username>, -u <username>\n\n      \n        command line option\n\n      \n      \n    --uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>\n\n      \n        command line option\n\n      \n      \n    --verbose <level>, -v <level>\n\n      \n        command line option\n\n      \n      \n    --verbose, -v\n\n      \n        command line option\n\n      \n      \n    --version\n\n      \n        command line option, [1]\n\n      \n  \n\n\nC\n\n  \n      \n    command line option\n\n      \n        --addr\n\n        --auth\n\n        --authenticationDatabase <dbname>\n\n        --authenticationMechanism <name>\n\n        --collection <collection>, -c <collection>\n\n        --config <path>\n\n        --customFilterField <name>, -f <name>\n\n        --db <database>, -d <database>\n\n        --defaultAuthDatabase <database>\n\n        --defaultAuthMechanism <authMechanism>\n\n        --filePermissions <mode>\n\n        --gssapiHostName <host-name>\n\n        --gssapiServiceName <service-name>\n\n        --help, [1]\n\n        --host <hostname><:port>, -h <hostname><:port>\n\n        --logAppend\n\n        --logPath <filename>\n\n        --mongo-ssl\n\n        --mongo-sslAllowInvalidCertificates\n\n        --mongo-sslCAFile <filename>\n\n        --mongo-sslFIPSMode\n\n        --mongo-sslPEMKeyFile <filename>\n\n        --mongo-sslPEMKeyPassword <password>\n\n        --mongo-uri <uri>\n\n        --noUnixSocket\n\n        --out <path>, -o <path>\n\n        --password <password>, -p <password>\n\n        --port <port>\n\n        --preJoined\n\n        --quiet, [1]\n\n        --sampleSize <size>, -s <size>\n\n        --schema <filename>\n\n        --schemaDirectory <directoryname>\n\n        --ssl\n\n        --sslAllowInvalidCertificates, [1]\n\n        --sslAllowInvalidHostnames\n\n        --sslCAFile <filename>, [1]\n\n        --sslCRLFile <filename>\n\n        --sslFIPSMode\n\n        --sslPEMKeyFile <filename>, [1]\n\n        --sslPEMKeyPassword <password>, [1]\n\n        --unixSocketPrefix <path>\n\n        --username <username>, -u <username>\n\n        --uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>\n\n        --verbose <level>, -v <level>\n\n        --verbose, -v\n\n        --version, [1]\n\n      \n  \n\n\nM\n\n  \n      mechanism (uri option)\n\n      mongodb.net.ssl.allowInvalidCertificates (setting)\n\n      mongodb.net.ssl.allowInvalidHostnames (setting)\n\n      mongodb.net.ssl.CAFile (setting)\n\n      mongodb.net.ssl.CRLFile (setting)\n\n      mongodb.net.ssl.enabled (setting)\n\n  \n  \n      mongodb.net.ssl.FIPSMode (setting)\n\n      mongodb.net.ssl.PEMKeyFile (setting)\n\n      mongodb.net.ssl.PEMKeyPassword (setting)\n\n      mongodb.net.uri (setting)\n\n      mongodb.versionCompatibility (setting)\n\n      mongodrdl (program), [1]\n\n      mongosqld (program), [1]\n\n  \n\n\nN\n\n  \n      net.bindIp (setting)\n\n      net.port (setting)\n\n      net.ssl.allowInvalidCertificates (setting)\n\n      net.ssl.CAFile (setting)\n\n  \n  \n      net.ssl.PEMKeyFile (setting)\n\n      net.ssl.PEMKeyPassword (setting)\n\n      net.unixDomainSocket.enabled (setting)\n\n      net.unixDomainSocket.filePermissions (setting)\n\n      net.unixDomainSocket.pathPrefix (setting)\n\n  \n\n\nP\n\n  \n      processManagement.service.description (setting)\n\n  \n  \n      processManagement.service.displayName (setting)\n\n      processManagement.service.name (setting)\n\n  \n\n\nR\n\n  \n      runtime.memory.maxPerStage (setting)\n\n  \n\n\nS\n\n  \n      schema.path (setting)\n\n      security.defaultMechanism (setting)\n\n      security.defaultSource (setting)\n\n      security.enabled (setting)\n\n  \n  \n      source (uri option)\n\n      systemLog.logAppend (setting)\n\n      systemLog.path (setting)\n\n      systemLog.quiet (setting)\n\n      systemLog.verbosity (setting)\n\n  \n\n\n\n\n    \n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Index","preview":"© MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.  \n  \n    Index\n  \n  \n    \n\n  \n  \n  \n  \n  \n  \n   \n   \n   \n    \n    \n    \n    \n    \n    \n\n  \n      ","tags":""},{"slug":"index/","headings":[],"text":"MongoDB Connector for BI\n\nOn this page\n\nAbout the MongoDB Connector for BI\nNew in Version 2\n\n\n\nAbout the MongoDB Connector for BI¶\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nThe MongoDB Connector for Business Intelligence (BI) allows users to\nvisualize their MongoDB Enterprise data using existing relational\nbusiness intelligence tools such as Tableau.\nThese tools expect to connect to a data source and find data in tabular\nform following a fixed schema. This presents a challenge when working\nwith MongoDB’s flexible schema and rich,\nmulti-dimensional, documents.\nThe MongoDB Connector for BI acts as a layer that passes queries and\ndata between a mongod or mongos instance and your\nreporting tool. The MongoDB Connector for BI stores no data, and purely serves to bridge your\nMongoDB server with business intelligence tools.\n\n\n\n\nNew in Version 2¶\n\nImproved Server-Side Execution¶\nThe MongoDB Connector for BI delivers significant performance and scalability improvements\nby moving as much execution as possible to the underlying MongoDB\ninstance. Pushing execution down to the server reduces network\nlatency and reduces bandwidth consumption.\nThis approach also reduces memory and CPU consumption in the MongoDB Connector for BI itself.\n\n\nPass-through Authentication¶\nThe user authentication process is now passed through the MongoDB Connector for BI to the\nunderlying MongoDB instance. Users now authenticate as a user already\ncreated within MongoDB.\n\n\nSimplified Architecture¶\nThe MongoDB Connector for BI package is now trimmed down from four separate components to\ntwo:\n\nmongodrdl\nThis tool connects to a MongoDB instance and\ngenerates a Document-Relational Definition Language (DRDL)\nfile, which maps a given collection shape to relational schema.\nmongosqld\nOnce installed and run as a daemon,\nmongosqld responds to SQL queries, requests for DB\ninformation, and schema from the requesting BI tool via the MySQL\nwire protocol.\nmongosqld requires at least one Document Relational Definition Language file to start.\nYou will need to have defined your schema with\nmongodrdl before starting mongosqld.\n\n\n\n\nSQL Compability¶\nMongoDB Connector for BI Version 2.0.0 is compatible with SQL-99 SELECT statements, and uses\nthe MySQL wire protocol.\n\nSee also\nSupported SQL Functions and Operators\n\n\n\nInstallation\nInstall the C Authentication Plugin\nInstall the JDBC Authentication Plugin\n\n\nSchema Configuration\nUsing the MongoDB Connector for BI\nConnecting to the MongoDB Connector for BI\nUsing the MongoDB Connector for BI with Atlas\n\n\nComponents\nmongodrdl\nmongosqld\n\n\nFAQ\nRelease Notes\nSupported SQL Functions and Operators\n\n\n\n\n\n\n                \n    \n      Installation\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"MongoDB Connector for BI","preview":"On this page Note The MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater. The MongoDB Connector for Business Intelligence (BI) allows users to","tags":""},{"slug":"installation/","headings":[],"text":"Installation\n\nOn this page\n\nSupported Platforms\nInstall the MongoDB Connector for BI\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nTo set up MongoDB Connector for BI with a business intelligence tool such as Tableau,\nfollow the steps on this page.\n\nSupported Platforms¶\nMongoDB Connector for BI supports PPC64LE systems running Red Hat Enterprise Linux 7.1+;\ns390x systems running Red Hat Enterprise Linux 7.2+; and the following\nx86_64 operating systems:\n\n\n\n\n\n\n\nRed Hat Enterprise Linux/CentOS\n6.2+\n7.0+\n\nDebian\n7.1+ “Wheezy”\n8.1+ “Jessie”\n\nUbuntu\n14.04 “Trusty”\n \n\nSUSE Enterprise Linux\n11\n12\n\nOS X\n10.10\n \n\nWindows\nWindows 7/Windows Server 2008 R2 and later\n \n\n\n\n\n\nInstall the MongoDB Connector for BI¶\n1\nUninstall old versions of the MongoDB Connector for BI (optional).¶\nIf you have an older version of the MongoDB Connector for BI installed, uninstall it.\n\nRed Hat Enterprise Linux and CentOS¶\nsudo yum remove mongodb-bi*\n\n\n\n\nDebian and Ubuntu¶\nsudo apt-get remove mongodb-bi*\n\n\n\n\nWindows¶\nDelete the MongoDB BI Connector directory from the Program\nFiles directory.\n\n\n2\nInstall OpenSSL.¶\n\nmacOS¶\n\nInstall Homebrew.\n\nUpdate Homebrew.\n\nInstall OpenSSL using Homebrew.\nbrew update && brew install openssl\n\n\n\n\n\n\nLinux¶\nEnsure that your system has its OpenSSL package installed.\n\n\nWindows¶\nThe MongoDB Connector for BI for Windows bundles the OpenSSL libraries. You do not\nneed to take any special action.\n\n\n3\nInstall the MongoDB Connector for BI.¶\nDownload the MongoDB Connector for BI for your operating system from the\nMongoDB Download Center.\n\nLinux / macOS¶\n\nExtract the tarball you downloaded.\n\nInstall the programs within the bin/ directory into a directory\nlisted in your system PATH.\nsudo install -m755 bin/mongo* /usr/local/bin/\n\n\n\n\n\n\nWindows¶\n\nExtract the ZIP file you downloaded.\n\nCreate a directory for the MongoDB Connector for BI within the Program Files\ndirectory:\nmd \"C:\\Program Files\\MongoDB BI Connector\"\n\n\n\nSave the MongoDB Connector for BI executables into the Program Files directory you\ncreated.\nmove {downloadDirectory}\\* \"C:\\Program Files\\MongoDB BI Connector\"\n\n\n\n\n\n\n4\nGenerate your schema definition file.¶\nProvide a MongoDB server hostname, replace dbname with the name of your\ndatabase, and optionally replace collname with the name of a collection.\nIf you do not specify a collection, mongodrdl will generate a\nschema from all collections in dbname.\n\nLinux / macOS¶\nmongodrdl --host {your.mongohost.com} -d dbname [-c collname] -o schema.drdl\n\n\n\n\nWindows¶\n\"C:\\Program Files\\MongoDB BI Connector\\bin\\mongodrdl.exe\" --host {your.mongohost.com} -d dbname [-c collname] -o schema.drdl\n\n\n\nNote\nThe --host option only accepts a hostname. You cannot\nprovide a MongoDB connection string.\n\nYou can examine the generated schema.drdl file, and remove any fields or\ntables that are not part of your intended schema.\n\n\n5\nStart mongosqld¶\n\nLinux / macOS¶\nmongosqld --schema schema.drdl --mongo-uri {your.mongohost.com}\n\n\n\n\nWindows¶\n\"C:\\Program Files\\MongoDB BI Connector\\bin\\mongosqld.exe\" --schema schema.drdl --mongo-uri {your.mongohost.com}\n\n\n\n\n6\nConnect to the MongoDB Connector for BI¶\nLaunch your business intelligence tool, and connect to the MongoDB Connector for BI using\na MySQL driver and the following settings:\n\n\n\n\n\n\nHost\nThe hostname of the server on which you installed the MongoDB Connector for BI in\nstep 3.\n\nPort\n3307 by default.\n\n\n\nSee Connecting to the MongoDB Connector for BI for more details on connecting to the\nMongoDB Connector for BI.\n\n\n\nInstall the C Authentication Plugin\nInstall the JDBC Authentication Plugin\n\n\n\n\n\n                \n    \n      ←  \n      MongoDB Connector for BI\n      Install the C Authentication Plugin\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Installation","preview":"On this page Note The MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater. To set up MongoDB Connector for BI with a business intelligence tool","tags":""},{"slug":"meta/404/","headings":[],"text":"File not found\nThe URL you requested does not exist or has been removed.\n\n\n                \n    \n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"File not found","preview":"The URL you requested does not exist or has been removed. © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.  \n  File not found — MongoDB Connector ","tags":""},{"slug":"reference/mongodrdl/","headings":[],"text":"MongoDB Connector for BI Components > \n          mongodrdl \n      \n    \n  \n                \n                  \nmongodrdl\n\nOn this page\n\nDescription\nCommand Line Options\nUsage\n\n\n\nDescription¶\n\n\nmongodrdl¶\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nmongodrdl produces a schema based on contents of one or more\nmongod collections and writes them out into\n.drdl files understood by mongosqld.\nSee Schema Configuration for details on this format.\n\nImportant\nRestart mongosqld to apply any changes you make to your\nDRDL files.\n\n\n\nCommand Line Options¶\n\nCore Options¶\n\n\nmongodrdl¶\n\n\n\n\n--help¶\nReturns information on the options and use of mongodrdl.\n\n\n\n\n--version¶\nReturns the mongodrdl release number.\n\n\n\n\n--verbose <level>, -v <level>¶\nSpecifies that mongodrdl should provide more detailed log output. Include\nmultiple times for more verbosity (e.g. -vvvvv), or specify a numeric\nvalue (e.g. --verbose=5).\n\n\n\n\n--quiet¶\nHides all log output.\n\n\n\n\n--host <hostname><:port>, -h <hostname><:port>¶\nDefault: localhost:27017\nSpecifies a resolvable hostname for the mongod to which to\nconnect. By default, the mongodrdl attempts to connect to a MongoDB\ninstance running on the localhost on port number 27017.\nTo connect to a replica set, specify the\nreplSetName and a seed list of set members, as in\nthe following:\n<replSetName>/<hostname1><:port>,<hostname2><:port>,<...>\n\n\nYou can always connect directly to a single MongoDB instance by\nspecifying the host and port number directly.\n\n\n\n\n--port <port>¶\nDefault: 27017\nSpecifies the TCP port on which the MongoDB instance listens for\nclient connections.\n\n\n\n\n--db <database>, -d <database>¶\nSpecifies a database from which to generate a .drdl schema file.\n\n\n\n\n--collection <collection>, -c <collection>¶\nSpecifies a collection from which to generate a .drdl schema file.\nIf you do not specify a collection, this option will use all collections in\nthe specified database or instance.\n\n\n\n\n--customFilterField <name>, -f <name>¶\nSpecifies the field name to add for a custom MongoDB filter. See\nCustom Filters for more details.\n\n\n\n\n--out <path>, -o <path>¶\nDefault: Standard out.\nSpecifies the path where mongodrdl will write the schema file. To\nsend the schema to standard output, specify “-” instead of\na path.\n\n\n\n\n--sampleSize <size>, -s <size>¶\nDefault: 1000\nSpecifies the number of documents to sample when generating the\ncollection’s schema.\n\n\n\n\n--uuidSubtype3Encoding <old|csharp|java>, -b <old|csharp|java>¶\nSpecify the encoding used to generate UUID binary subtype 3. Choose\none of the following values:\n\nold: Old BSON binary subtype representation,\ncsharp: The C#/.NET legacy UUID representation, and\njava: The Java legacy UUID representation.\n\n\n\n\n\n--preJoined¶\nGenerate unwound tables including parent columns, resulting in a\n“pre-joined” table.\n\n\n\n\nKerberos Options¶\n\n\n--gssapiServiceName <service-name>¶\nDefault: mongodb\nSpecifies the service name to use when authenticating using\nGSSAPI/Kerberos.\n\n\n\n\n--gssapiHostName <host-name>¶\nDefault: remote server’s hostname\nSpecifies the hostname to use when authenticating using\nGSSAPI/Kerberos.\n\n\n\n\nTLS/SSL Options¶\n\n\n--ssl¶\nDefault: False\nInstructs mongodrdl to use TLS/SSL when connecting to a\nMongoDB instance.\n\n\n\n\n--sslCAFile <filename>¶\nSpecifies the MongoDB instance’s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\nWarning\nFor SSL connections (--ssl) to mongod and\nmongos, if the mongodrdl runs without the\n--sslCAFile, mongodrdl will not attempt\nto validate the server certificates. This creates a vulnerability\nto expired mongod and mongos certificates as\nwell as to foreign processes posing as valid mongod or\nmongos instances. Ensure that you always specify the\nCA file to validate the server certificates in cases where\nintrusion is a possibility.\n\n\n\n\n\n--sslPEMKeyFile <filename>¶\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for the MongoDB instance. Specify the file name of the\n.pem file using relative or absolute paths.\nThis option is required when using the --ssl option to\nconnect to a mongod or mongos that has\nCAFile enabled without\nallowConnectionsWithoutCertificates.\n\n\n\n\n--sslPEMKeyPassword <password>¶\nSpecifies the path to a file containing the certificate and private\nkey for connecting to MongoDB.\n\n\n\n\n--sslCRLFile <filename>¶\nSpecifies the .pem file that contains the Certificate Revocation\nList. Specify the file name of the .pem file using relative or\nabsolute paths.\n\n\n\n\n--sslAllowInvalidCertificates¶\nPermits the MongoDB instance to present an invalid server SSL/TLS\ncertificate. When using the allowInvalidCertificates\nsetting, MongoDB logs the use of the invalid certificate as a warning.\n\n\n\n\n--sslAllowInvalidHostnames¶\nDisables the validation of the hostnames in TLS/SSL certificates. Allows\nmongodrdl to connect to MongoDB instances if the hostname their\ncertificates do not match the specified hostname.\n\n\n\n\n--sslFIPSMode¶\nDirects the mongodrdl to use the FIPS mode of the installed OpenSSL\nlibrary. Your system must have a FIPS compliant OpenSSL library to use\nthe --sslFIPSMode option.\n\n\n\n\nAuthentication Options¶\n\n\n--username <username>, -u <username>¶\nSpecifies a username with which to authenticate to a MongoDB database\nthat uses authentication. Use in conjunction with the --password and\n--authenticationDatabase options.\n\n\n\n\n--password <password>, -p <password>¶\nSpecifies a password with which to authenticate to a MongoDB database\nthat uses authentication. Use in conjunction with the --username and\n--authenticationDatabase options.\n\n\n\n\n--authenticationDatabase <dbname>¶\nSpecifies the database in which the user is created.\nSee Authentication Database.\n\n\n\n\n--authenticationMechanism <name>¶\nDefault: SCRAM-SHA-1\nSpecifies the authentication mechanism the mongodrdl instance uses to\nauthenticate to the mongod or mongos.\n\n\n\n\n\n\nValue\nDescription\n\n\n\nSCRAM-SHA-1\nRFC 5802 standard\nSalted Challenge Response Authentication Mechanism using the SHA1\nhash function.\n\nMONGODB-CR\nMongoDB challenge/response authentication.\n\nMONGODB-X509\nMongoDB TLS/SSL certificate authentication.\n\nGSSAPI (Kerberos)\nExternal authentication using Kerberos. This mechanism is\navailable only in MongoDB Enterprise.\n\nPLAIN (LDAP SASL)\nExternal authentication using LDAP. You can also use PLAIN\nfor authenticating in-database users. PLAIN transmits\npasswords in plain text. This mechanism is available only in\nMongoDB Enterprise.\n\n\n\n\n\n\n\nCustom Filters¶\nYou can add a special field to your schema to pass a custom\nMongoDB $match query string to your MongoDB instance.\nUse the --customFilterField option with mongodrdl to name\na custom filter field. This field passes a native MongoDB\n$match stage to use as the first stage of the aggregation\npipeline. The MongoDB Connector for BI applies this stage before any additional stages\npushed down from SQL.\nThe query can refer to any field in the collection, even if the fields\nwere not exposed in the relational schema.\nFor an example, see Custom Filter.\n\n\n\nUsage¶\n\nGenerate a Schema¶\nGiven documents of the following shape in the collection abc in the\ndatabase test:\n{\n    \"_id\": ObjectId(),\n    \"close\": 7.45,\n    \"detail\": { \"a\": 2, \"b\": 3 }\n}\n\n\nYou can use mongodrdl to generate a schema based on this collection\nby running the following command:\nmongodrdl -d test -c abc -o schema.drdl\n\n\nThe generated schema file schema.drdl will look similar to the following:\nschema:\n- db: test\n  tables:\n  - table: abc\n    collection: abc\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: close\n      MongoType: float64\n      SqlName: close\n      SqlType: numeric\n    - Name: detail.a\n      MongoType: float64\n      SqlName: detail.a\n      SqlType: numeric\n    - Name: detail.b\n      MongoType: float64\n      SqlName: detail.b\n      SqlType: numeric\n\n\n\n\nCustom Filter¶\nTo use this field, specify the --customFilterField flag with the name you\nwant this field to have:\nmongodrdl [ other options ] --customFilterField \"_MONGOFILTER\" -o schema.drdl\n\n\nYour DRDL file schema.drdl will include the following field in every generated table:\n- name: _MONGOFILTER\n  mongotype: mongo.Filter\n  sqltype: varchar\n\n\nTo add the special MongoDB query stage to your standard SQL, use the following\nSQL syntax:\nSELECT <normal>\n   FROM <tablename>\n   WHERE <normal conditions> AND\n       \"_MONGOFILTER\"='{ <json string that represents query to use> }'\n\nSELECT name,age\n  FROM users\n  WHERE active='t' AND\n    \"_MONGOFILTER\"='{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}}'\n\n\nThe MongoDB Connector for BI will translate the above SQL into the following MongoDB\naggregation expression:\ndb.users.aggregate([\n   {$match:{\"addr\":{\"$elemMatch\":{\"city\":\"Springfield\",\"state\":\"CA\"}}},\n   {$match:{\"active\":true}},\n   {$project:{\"name\":1, \"age\":1}}\n]);\n\n\nYou can use this custom filter in any business intelligence tool by filtering\non your special field and providing the value to match as a single quoted string\nrepresenting valid JSON. All quotes inside the JSON must be double\nquotes.\n\nSee also\nMongoDB Connector for BI\n\n\n\n\n\n                \n    \n      ←  \n      MongoDB Connector for BI Components\n      mongosqld\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"mongodrdl","preview":"On this page Note The MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater. mongodrdl produces a schema based on contents of one or more\nmongod ","tags":""},{"slug":"reference/mongosqld/","headings":[],"text":"MongoDB Connector for BI Components > \n          mongosqld \n      \n    \n  \n                \n                  \nmongosqld\n\nOn this page\n\nDescription\nCommand Line Options\nConfiguration File\n\n\n\nDescription¶\n\n\nmongosqld¶\n\n\n\nNote\nThe MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater.\n\nmongosqld accepts incoming requests from a MySQL client, and\nproxies those requests to a mongod or mongos\ninstance.\n\n\nCommand Line Options¶\n\nCore Options¶\n\n\nmongosqld¶\n\n\n\n\n--help¶\nReturns information on the options and use of mongosqld.\n\n\n\n\n--addr¶\nDefault: 127.0.0.1:3307\nSpecifies the host address to listen on.\n\n\n\n\n--version¶\nReturns the mongosqld release number.\n\n\n\n\n--config <path>¶\nSpecify a path to a configuration file.\n\n\n\n\n--schema <filename>¶\nSpecifies the path to a schema file generated by mongodrdl.\n\n\n\n\n--schemaDirectory <directoryname>¶\nSpecifies the path to a directory containing schema files generated\nby mongodrdl.\nAll files in this directory MUST be schema files, or else\nmongosqld will not start.\n\n\n\n\n--mongo-uri <uri>¶\nDefault: mongodb://localhost:27017\nSpecifies a MongoDB connection string to connect to.\nDo not specify a username and password in your connection string.\nmongosqld will pass authentication credentials from the client to\nthe MongoDB server upon receiving a connection if --auth is\nenabled.\nTo enable TLS/SSL in this connection, use the --mongo-ssl\noption.\nThe --mongo-uri option also supports the readPreference and\nreadPreferenceTags mongosqld  connection string URI\noptions. To learn more about connection string URI options,\nsee Read Preference options.\n\n\n\n\nLog Options¶\n\n\n--logAppend¶\nAppend new logging output to an existing log file specified by\n--logPath.\n\n\n\n\n--logPath <filename>¶\nDefault: stderr\nSpecifies a path to a log file for storing logging output.\n\n\n\n\n--verbose, -v¶\nSpecifies that mongosqld should provide more detailed log output. Include\nmultiple times for more verbosity (e.g. -vvvvv).\n\n\n\n\n--quiet¶\nHides all log output.\n\n\n\n\nMongoDB TLS/SSL Options¶\n\n\n--mongo-ssl¶\nDefault: False\nInstructs mongosqld to use TLS/SSL when connecting to a\nMongoDB instance.\n\n\n\n\n--mongo-sslPEMKeyFile <filename>¶\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for the MongoDB instance. Specify the file name of the\n.pem file using relative or absolute paths.\nThis option is required when using the --mongo-ssl option to\nconnect to a mongod or mongos that has\nCAFile enabled without\nallowConnectionsWithoutCertificates.\n\n\n\n\n--mongo-sslPEMKeyPassword <password>¶\nSpecifies the path to a file containing the certificate and private\nkey for connecting to MongoDB.\n\n\n\n\n--mongo-sslAllowInvalidCertificates¶\nPermits the MongoDB instance to present an invalid server SSL/TLS\ncertificate. When using the allowInvalidCertificates\nsetting, MongoDB logs the use of the invalid certificate as a warning.\n\n\n\n\n--mongo-sslCAFile <filename>¶\nSpecifies the MongoDB instance’s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\nWarning\nFor SSL connections (--ssl) to mongod and\nmongos, if the mongosqld runs without the\n--mongo-sslCAFile, mongosqld will not attempt\nto validate the server certificates. This creates a vulnerability\nto expired mongod and mongos certificates as\nwell as to foreign processes posing as valid mongod or\nmongos instances. Ensure that you always specify the\nCA file to validate the server certificates in cases where\nintrusion is a possibility.\n\n\n\n\n\n--mongo-sslFIPSMode¶\nEnable FIPS mode in the installed OpenSSL library.\n\n\n\n\nClient TLS/SSL Options¶\n\n\n--sslPEMKeyFile <filename>¶\nSpecifies the .pem file containing both the TLS/SSL certificate\nand key for MySQL clients. Specify the file name of the .pem\nfile using relative or absolute paths.\n\n\n\n\n--sslPEMKeyPassword <password>¶\nSpecifies the password used to decrypt the private key specified by\n--sslPEMKeyFile.\n\n\n\n\n--sslAllowInvalidCertificates¶\nPermits MySQL clients to present invalid client SSL/TLS certificates.\n\n\n\n\n--sslCAFile <filename>¶\nSpecifies the MySQL client’s .pem file containing the root\ncertificate chain from the Certificate Authority. Specify the file\nname of the .pem file using relative or absolute paths.\n\n\n\n\n--auth¶\nRequire authentication for incoming client requests. Requires\n--sslPEMKeyFile.\n\n\n\n\n--defaultAuthDatabase <database>¶\nDefault: admin\nSpecifies the default authentication source database for connecting to the\nMongoDB Connector for BI. Set this value to specify a default database for connecting to\nmongosqld. Any connections using the default value can omit the source\nvalue from their MySQL or Tableau username.\n\n\n\n\n--defaultAuthMechanism <authMechanism>¶\nDefault: SCRAM-SHA1\nSpecifies the default authentication mechanism. Set this value to\nspecify a default mechanism for connecting to mongosqld. Any\nconnections using the default value can omit the mechanism value\nfrom their MySQL or\nTableau username.\n\n\n\n\nSocket Options¶\n\n\n--filePermissions <mode>¶\nDefault: 448\nSpecify the permissions for the Unix domain socket file.\n\n\n\n\n--noUnixSocket¶\nDisable listening on Unix domain sockets.\n\n\n\n\n--unixSocketPrefix <path>¶\nDefault: /tmp\nSpecify an alternative directory for the mongosqld Unix domain\nsocket.\nmongosqld will create a socket file called mysql.sock underneath\nthis path. If you do not specify --unixSocketPrefix, the socket will exist at\n/tmp/mysql.sock.\n\n\n\n\n\nConfiguration File¶\nYou may configure mongosqld using a YAML\nconfiguration file. This file may contain the settings listed in the\nfollowing sections.\n\nLogging Options¶\nsystemLog:\n  logAppend: <boolean>\n  path: <string>\n  quiet: <boolean>\n  verbosity: <integer>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nsystemLog.logAppend¶\n\n\n\nboolean\n--logAppend\n\n\n\nsystemLog.path¶\n\n\n\nstring\n--logPath\n\n\n\nsystemLog.quiet¶\n\n\n\nboolean\n--quiet\n\n\n\nsystemLog.verbosity¶\n\n\n\ninteger\n--verbose\n\n\n\n\n\nSchema Options¶\nschema:\n  path: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nschema.path¶\n\n\n\nstring\n--schema\n\n\n\n\n\nRuntime Options¶\nruntime:\n  memory:\n    maxPerStage: <integer>\n\n\n\n\nruntime.memory.maxPerStage¶\nType: integer\nDefault: unlimited\nSpecifies the maximum amount of memory in bytes that a query execution\nstage may use.\n\n\n\n\nNetwork Options¶\nnet:\n  bindIp: <string>\n  port: <integer>\n  unixDomainSocket:\n    enabled: <boolean>\n    pathPrefix: <string>\n    filePermissions: <string>\n  ssl:\n    allowInvalidCertificates: <boolean>\n    PEMKeyFile: <string>\n    PEMKeyPassword: <string>\n    CAFile: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nnet.bindIp¶\n\n\n\nstring\nThe hostname component of --addr\n\n\n\nnet.port¶\n\n\n\ninteger\nThe port component of --addr\n\n\n\nnet.unixDomainSocket.enabled¶\n\n\n\nboolean\nInverse of --noUnixSocket\n\n\n\nnet.unixDomainSocket.pathPrefix¶\n\n\n\nstring\n--unixSocketPrefix\n\n\n\nnet.unixDomainSocket.filePermissions¶\n\n\n\nstring\n--filePermissions\n\n\n\nnet.ssl.allowInvalidCertificates¶\n\n\n\nboolean\n--sslAllowInvalidCertificates\n\n\n\nnet.ssl.PEMKeyFile¶\n\n\n\nstring\n--sslPEMKeyFile\n\n\n\nnet.ssl.PEMKeyPassword¶\n\n\n\nstring\n--sslPEMKeyPassword\n\n\n\nnet.ssl.CAFile¶\n\n\n\nstring\n--sslCAFile\n\n\n\n\n\nSecurity Options¶\nsecurity:\n  enabled: <boolean>\n  defaultMechanism: <string>\n  defaultSource: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nsecurity.enabled¶\n\n\n\nboolean\n--auth\n\n\n\nsecurity.defaultMechanism¶\n\n\n\nstring\n--defaultAuthMechanism\n\n\n\nsecurity.defaultSource¶\n\n\n\nstring\n--defaultAuthSource\n\n\n\n\n\nMongoDB Host Options¶\nmongodb:\n  versionCompatibility: <string>\n  net:\n    uri: <string>\n    ssl:\n      enabled: <boolean>\n      allowInvalidCertificates: <boolean>\n      allowInvalidHostnames: <boolean>\n      PEMKeyFile: <string>\n      PEMKeyPassword: <string>\n      CAFile: <string>\n      CRLFile: <string>\n      FIPSMode: <boolean>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nmongodb.versionCompatibility¶\n\n\n\nstring\n--mongo-versionCompatibility\n\n\n\nmongodb.net.uri¶\n\n\n\nstring\n--mongo-uri\n\n\n\nmongodb.net.ssl.enabled¶\n\n\n\nboolean\n--mongo-ssl\n\n\n\nmongodb.net.ssl.allowInvalidCertificates¶\n\n\n\nboolean\n--mongo-allowInvalidCertificates\n\n\n\nmongodb.net.ssl.allowInvalidHostnames¶\n\n\n\nboolean\n--mongo-sslAllowInvalidHostnames\n\n\n\nmongodb.net.ssl.PEMKeyFile¶\n\n\n\nstring\n--mongo-sslPEMKeyFile\n\n\n\nmongodb.net.ssl.PEMKeyPassword¶\n\n\n\nstring\n--mongo-sslPEMKeyPassword\n\n\n\nmongodb.net.ssl.CAFile¶\n\n\n\nstring\n--mongo-sslCAFile\n\n\n\nmongodb.net.ssl.CRLFile¶\n\n\n\nstring\n--mongo-sslCRLFile\n\n\n\nmongodb.net.ssl.FIPSMode¶\n\n\n\nboolean\n--mongo-sslFIPSMode\n\n\n\n\n\nProcess Management Options¶\nprocessManagement:\n  service:\n    name: <string>\n    displayName: <string>\n    description: <string>\n\n\n\n\n\n\n\n\n\nName\nType\nCorresponds to\n\n\n\n\n\nprocessManagement.service.name¶\n\n\n\nstring\n--serviceName\n\n\n\nprocessManagement.service.displayName¶\n\n\n\nstring\n--serviceDisplayName\n\n\n\nprocessManagement.service.description¶\n\n\n\nstring\n--serviceDescription\n\n\n\n\n\nExample¶\nIf you wish to specify a configuration file which saves logs to\n/var/log/mongosqld.log and loads a schema from /var/schema.drdl,\nyou may save a file such as the following to /etc/mongosqld.conf:\nsystemLog:\n  path: /var/log/mongosqld.log\nschema:\n  path: \"/var/schema.drdl\"\n\n\nYou may then start mongosqld with the --config\noption:\nmongosqld --config /etc/mongosqld.conf\n\n\n\n\n\n\n                \n    \n      ←  \n      mongodrdl\n      FAQ: The MongoDB Connector for BI\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"mongosqld","preview":"On this page Note The MongoDB Connector for BI and associated utilities are only available with MongoDB\nEnterprise 3.2 and greater. mongosqld accepts incoming requests from a MySQL client, and\nproxies","tags":""},{"slug":"release-notes/","headings":[],"text":"Release Notes for MongoDB Connector for BI\n\nOn this page\n\nMongoDB Connector for BI 2.1\nMongoDB Connector for BI 2.0\nMongoDB Connector for BI 1.0\n\n\n\nMongoDB Connector for BI 2.1¶\n\nSubstantial performance improvements for some common JOIN scenarios.\nImprovements to index utilization by pushing $match stages earlier in\nthe aggregation pipeline.\nMore SQL functions and operators are pushed down to the aggregation\npipeline.\nSupport for additional SQL language features, such as USE and\nSHOW CREATE TABLE statements, STRAIGHT_JOIN, the unary\nplus (+) operator, and the INTERVAL keyword in\ndate arithmetic.\n\n\nNote\nmongosqld no longer offers the --fork option.\nTo run mongosqld in the background, use the nohup\ncommand:\nnohup mongosqld [options] &\n\n\n\n\n\nMongoDB Connector for BI 2.0¶\nReleased Nov 29, 2016\n\nImproved Server-Side Execution¶\nThe MongoDB Connector for BI delivers significant performance and scalability improvements\nby moving as much execution as possible to the underlying MongoDB\ninstance. Pushing execution down to the server reduces network\nlatency and reduces bandwidth consumption.\nThis approach also reduces memory and CPU consumption in the MongoDB Connector for BI itself.\n\n\nPass-through Authentication¶\nThe user authentication process is now passed through the MongoDB Connector for BI to the\nunderlying MongoDB instance. Users now authenticate as a user already\ncreated within MongoDB.\n\n\nSimplified Architecture¶\nThe MongoDB Connector for BI package is now trimmed down from four separate components to\ntwo:\n\nmongodrdl\nThis tool connects to a MongoDB instance and\ngenerates a Document-Relational Definition Language (DRDL)\nfile, which maps a given collection shape to relational schema.\nmongosqld\nOnce installed and run as a daemon,\nmongosqld responds to SQL queries, requests for DB\ninformation, and schema from the requesting BI tool via the MySQL\nwire protocol.\nmongosqld requires at least one Document Relational Definition Language file to start.\nYou will need to have defined your schema with\nmongodrdl before starting mongosqld.\n\n\n\n\nSQL Compability¶\nMongoDB Connector for BI Version 2.0.0 is compatible with SQL-99 SELECT statements, and uses\nthe MySQL wire protocol.\n\nSee also\nSupported SQL Functions and Operators\n\n\n\nMongoDB Connector for BI 2.0.2¶\nReleased Jan 5, 2017\n\nHide .pem key file passwords in logs.\nmongodrdl ignores binary fields when generating DRDL files.\nSupport queries that SELECT variables prefixed with “mongodb”.\nFix incorrect result set from a cross join.\nSupport leading “.” characters on table names.\n\n\n\nMongoDB Connector for BI 2.0.1¶\nReleased Dec 13, 2016\n\nFixed precedence issue with the NOT operator.\nFixed error looking up privilege information in databases with capital\nletters.\nSupport LIKE pattern matching in SHOW COLUMNS queries.\nImproved formatting of aggregation pipeline in logs.\nFixed bug in substring function when the combined length of the\nstarting index and substring exceeds the length of the\nstring.\n\n\n\n\nMongoDB Connector for BI 1.0¶\nReleased Dec 8, 2015\nMongoDB Connector for BI 1.0 is now available. It\nallows users to visualize their MongoDB Enterprise data using existing\nrelational business intelligence tools.\n\nMongoDB Connector for BI 1.1.3¶\nReleased Apr 4, 2016\n\nImprove join performance.\nSupport packages for Debian and Ubuntu.\n\n\n\nMongoDB Connector for BI 1.1.2¶\nReleased Feb 3, 2016\n\nPush down ORDER BY clause as a $sort stage in the\naggregation pipeline.\n\n\n\nMongoDB Connector for BI 1.1.1¶\nReleased Jan 27, 2016\n\nIgnore collections prefixed with “system.” when generating the\nDRDL file for a database with mongodrdl.\nCheck if file is writable before sampling when generating the\nDRDL file with program:mongodrdl.\n\n\n\nMongoDB Connector for BI 1.1.0¶\nReleased Jan 12, 2016\n\nSupport renaming columns using the sqlname field in DRDL\nfiles.\nSupport the mongotype: geo.2darray DRDL field for mapping\ngeospatial data.\n\n\n\n\n\n                \n    \n      ←  \n      FAQ: The MongoDB Connector for BI\n      Supported SQL Functions and Operators\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Release Notes for MongoDB Connector for BI","preview":"On this page Note mongosqld no longer offers the --fork option. To run mongosqld in the background, use the nohup\ncommand: Released Nov 29, 2016 The MongoDB Connector for BI delivers significant perfo","tags":""},{"slug":"schema-configuration/","headings":[],"text":"Schema Configuration\n\nOn this page\n\nDocument Relational Definition Language\nField Types\nEmbedded Documents\nArrays\nCustom Filters\nAggregation Pipelines\nGeospatial Data\n\n\nBusiness intelligence tools connect to a data source and, given a fixed\ntabular schema, allow the user to visually explore their data. As\nMongoDB uses a flexible schema, these tools\ncurrently cannot use MongoDB as a native data source.\nTo use MongoDB with a relational business intelligence tool such as\nTableau, you must define a relational\nmapping for your MongoDB data.\nThe schema generation tool mongodrdl outputs such a schema in the\nDocument Relational Definition Language (DRDL) format, but you\nshould verify that the schema it proposes matches your data requirements.\nExamine both the table structure and field types to ensure that you can\ngenerate your intended reports.\nYou may have to manually edit the schema definition files to remove\nunneeded fields; add fields that mongodrdl did not discover\nwithin the subset of documents that it sampled; and modify erroneous\nfield types.\nYou may edit DRDL files to:\n\nAdd aggregation pipeline stages,\nAdd fields,\nRemove fields,\nRemove tables,\nRename tables, so long as the collection field remains the same,\nRename fields using the sqlname option\n\n\nImportant\nRestart mongosqld to apply any changes you make to your\nDRDL files.\n\n\nDocument Relational Definition Language¶\nThe Document Relational Definition Language (DRDL) defines a\nrelational view of a MongoDB schema.\nmongodrdl samples documents from your MongoDB collections, and\nderives a DRDL file from those documents. mongosqld then\nuses the schema defined in DRDL files to allow MySQL clients to\nquery your MongoDB data.\n\nFile Format¶\nThe DRDL file lists your databases, tables, and columns in\nYAML format.\nschema:\n- db: <database name>\n  tables:\n  - table: <SQL table name>\n    collection: <MongoDB collection name>\n    pipeline:\n    - <optional pipeline elements>\n    columns:\n    - Name: <MongoDB field name>\n      MongoType: <MongoDB field type>\n      SqlName: <mapped SQL column name>\n      SqlType: <mapped SQL column type>\n\n\n\n\nExample¶\nGiven documents of the following shape in the collection abc in the\ndatabase test:\n{\n    \"_id\": ObjectId(),\n    \"close\": 7.45,\n    \"detail\": { \"a\": 2, \"b\": 3 }\n}\n\n\nYou can use mongodrdl to generate a schema based on this collection\nby running the following command:\nmongodrdl -d test -c abc -o schema.drdl\n\n\nThe generated schema file schema.drdl will look similar to the following:\nschema:\n- db: test\n  tables:\n  - table: abc\n    collection: abc\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: close\n      MongoType: float64\n      SqlName: close\n      SqlType: numeric\n    - Name: detail.a\n      MongoType: float64\n      SqlName: detail.a\n      SqlType: numeric\n    - Name: detail.b\n      MongoType: float64\n      SqlName: detail.b\n      SqlType: numeric\n\n\n\n\n\nField Types¶\nThe MongoDB Connector for BI correctly maps fields that always contain the same data\ntype into the relational model. Schema generation deals specially\nwith the following cases:\n\n\n\n\n\n\nNumeric\nThe MongoDB Connector for BI uses the most precise numeric type that matches the\nsampled documents.\nIf a field in a collection always has the same data type, the MongoDB Connector for BI\nuses that type.\nIf a field in a collection can contain either floating point\nvalues or integers, the MongoDB Connector for BI uses type numeric.\n\n\nDates\nThe MongoDB Connector for BI treats any field of type data_date as the\nSQL timestamp type.\n\nTimestamps\nThe MongoDB Connector for BI ignores any field of type data_timestamp.\n\nObjectID\nThe MongoDB Connector for BI treats any field of type data_oid as\nthe SQL type varchar.\n\nUUID\nThe MongoDB Connector for BI treats any field of type UUID as the SQL type\nvarchar.\n\nGeospatial\nIf a collection contains a\ngeospatial index, the\nconnector maps the indexed field into an array of numeric\nlongitude-latitude coordinates.\nSee Geospatial Data for an example.\nmongodrdl will currently not recognize geospatial fields\nin a read-only view.\n\n\nHeterogeneous Fields\nIf a field contains inconsistent types, the MongoDB Connector for BI chooses the most\nfrequently sampled type.\nIf a field can contain either a type or an array of that type, the\ngenerated schema always specifies that the field contains an array.\n\nSee also\nHow do I skip data incompatible with my DRDL type definition?\n\n\n\n\n\n\n\nEmbedded Documents¶\nThe MongoDB Connector for BI maps embedded documents to simple fields\nthat have a . separator character, making them appear similar to the way you\nwould reference them using dot notation in a\nMongoDB query.\nWhile Tableau properly quotes identifiers, within ad-hoc\nSQL expressions you must double-quote every identifier that contains .\ncharacters or mixed-case characters.\n\nExample¶\nConsider the following document:\n{\n    \"_id\": 1,\n    \"familyName\": \"Partridge\",\n    \"hometown\" : \"Hollywood Hills\",\n    \"address\" : { \"street\": \"123 Main Street\",\n                  \"city\" : \"Hollywood\",\n                  \"state\" : \"CA\",\n                  \"zip\" : \"90210\" },\n    \"members_since\" : ISODate(\"2002-04-12T00:00:00Z\")\n}\n\n\nRunning mongodrdl on a collection containing this document\nresults in the following fields in the generated schema:\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\naddress.street\nvarchar\n\naddress.city\nvarchar\n\naddress.state\nvarchar\n\naddress.zip\nvarchar\n\nmembers_since\ntimestamp\n\n\n\n\n\n\nArrays¶\nThe MongoDB Connector for BI exposes arrays to business intelligence tools using two\ncollections: one without the array, and the other having one document\nper array element.\n\nExample¶\nIf you run mongodrdl on a collection families with the\nfollowing document:\n{\n   \"_id\": 1,\n   \"familyName\": \"Partridge\",\n   \"hometown\" : \"Hollywood Hills\",\n   \"familyMembers\" : [\n     {\n         \"firstname\" : \"Shirley\",\n         \"age\" : 42,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"singer\" },\n             { \"name\" : \"role\", \"value\" : \"mom\" }\n         ]\n     },\n     {\n         \"firstname\" : \"Keith\",\n         \"age\" : 18,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"guitar\" },\n             { \"name\" : \"role\", \"value\" : \"son\" }\n         ]\n     },\n     {\n         \"firstname\" : \"Laurie\",\n         \"age\" : 16,\n         \"attributes\" : [\n             { \"name\" : \"instrument\", \"value\" : \"keyboard\" },\n             { \"name\" : \"role\", \"value\" : \"sister\" }\n         ]\n     }]\n}\n\n\nThis results in the following three tables:\n\nfamilies\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\nfamilies_familyMembers\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyMembers.age\nnumeric\n\nfamilyMembers.firstname\nvarchar\n\nfamilyMembers_idx\nnumeric\n\n\n\n\nfamilies_familyMembers_attributes\n\n\n\n\n\n\n_id\nnumeric\n\nfamilyMembers.attributes.name\nvarchar\n\nfamilyMembers.attributes.value\nvarchar\n\nfamilyMembers.attributes_idx\nnumeric\n\nfamilyMembers_idx\nnumeric\n\n\n\n\n\nYou can join these tables together to view the data in a denormalized\nformat. For example, you can list the people named in the above schema\ntogether with their family information using the following query:\nSELECT f.*, m.`familyMembers.firstname` FROM families_familyMembers m JOIN families f ON m._id = f._id;\n\n\n\n\nPre-Joining¶\nIf you provide the --preJoined option to mongodrdl,\nthen the MongoDB Connector for BI adds the fields in the containing document to each\narray element’s document, thus “pre-joining” the table.\nIn the previous example, the tables would contain the following\nadditional columns:\n\nfamilies_familyMembers\n\n\n\n\n\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\nfamilies_familyMembers_attributes\n\n\n\n\n\n\nfamilyMembers.age\nnumeric\n\nfamilyMembers.firstname\nvarchar\n\nfamilyMembers_idx\nnumeric\n\nfamilyName\nvarchar\n\nhometown\nvarchar\n\n\n\n\n\n\n\n\nCustom Filters¶\nYou can add a column of type mongo.Filter to a collection in your\nDRDL file. This column type allows you to perform a custom\n$match query.\nFor example, given the following schema describing a cloud of points with\nup to three components:\nschema:\n- db: test\n  tables:\n  - table: points\n    collection: points\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: x\n      MongoType: float64\n      SqlName: x\n      SqlType: numeric\n    - Name: \"y\"\n      MongoType: float64\n      SqlName: \"y\"\n      SqlType: numeric\n    - Name: z\n      MongoType: float64\n      SqlName: z\n      SqlType: numeric\n    - Name: filter\n      MongoType: mongo.Filter\n      SqlName: filter\n      SqlType: varchar\n\n\nYou can select only three-dimensional points using the following query:\nSELECT x, y, z FROM points WHERE filter='{\"z\": {\"$exists\": true}}';\n\n\n\n\nAggregation Pipelines¶\n\nAggregation Pipelines using Views¶\nMongoDB 3.4 introduces Read-Only Views that you can\nuse to filter incompatible data.\nFor example, you can create a view in the test database that contains\nonly documents containing a number in the grade field of a grades\ncollection:\ndb.runCommand( { create: \"numericGrades\", viewOn: \"grades\", pipeline: [ { \"$match\": { \"grade\": { \"$type\": \"number\" } } } ] } )\n\n\nYou can then use mongodrdl to generate a schema from this view\nas you would a collection:\nmongodrdl -d test -c numericGrades\n\n\n\n\nAggregation Pipelines in DRDL¶\nThe MongoDB Connector for BI can use aggregation pipelines as\npart of the schema to transform documents from the collection into the\nproper form for the relational tables.\nFor example, consider a simple document in the collection\nsimpleFamilies:\n{\n   \"_id\": 1,\n   \"familyName\": \"Partridge\",\n   \"familyMembers\" : [ \"Shirley\", \"Keith\", \"Laurie\"]\n}\n\n\nmongodrdl will generate a schema with the tables\nsimpleFamilies and simpleFamilies_familyMembers.\nThe table simpleFamilies_familyMembers enumerates each family\nmembers, and has the following pipeline:\npipeline:\n- $unwind:\n    includeArrayIndex: familyMembers_idx\n    path: $familyMembers\n\n\nThis pipeline uses $unwind to create a new record for each\nmember of familyMembers. The schema tracks the array index in\nthe field familyMembers_idx.\n\n\n\nGeospatial Data¶\n\nNew in version 1.1.0.\n\nIf a collection contains a\ngeospatial index, the\nconnector maps the indexed field into an array of numeric\nlongitude-latitude coordinates.\n\nExample¶\nGiven the following collection:\ndb.points.createIndex( { pos : \"2dsphere\" } )\ndb.points.insert({\n    pos : { type: \"Point\", coordinates: [ -73.97, 40.77 ] },\n    name: \"Central Park\",\n    category : \"Parks\"\n})\n\n\nmongodrdl generates the following schema:\nschema:\n- db: test\n  tables:\n  - table: points\n    collection: points\n    pipeline: []\n    columns:\n    - Name: _id\n      MongoType: bson.ObjectId\n      SqlName: _id\n      SqlType: varchar\n    - Name: category\n      MongoType: string\n      SqlName: category\n      SqlType: varchar\n    - Name: name\n      MongoType: string\n      SqlName: name\n      SqlType: varchar\n    - Name: pos.coordinates\n      MongoType: geo.2darray\n      SqlName: pos.coordinates\n      SqlType: numeric[]\n\n\nmongodrdl will currently not recognize geospatial fields\nin a read-only view.\n\n\n\n\n                \n    \n      ←  \n      Install the JDBC Authentication Plugin\n      Using the MongoDB Connector for BI\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Schema Configuration","preview":"On this page Business intelligence tools connect to a data source and, given a fixed\ntabular schema, allow the user to visually explore their data. As\nMongoDB uses a flexible schema, these tools\ncurre","tags":""},{"slug":"search/","headings":[],"text":"Search\n    \n    \n    \n      Please activate JavaScript to enable the search\n      functionality.\n    \n    \n    \n      From here you can view your search results. Enter your search\n      words into the box at the top right of the page and press \"Enter\". Note that the search\n      function will automatically search for all of the words. Pages\n      containing fewer words won't appear in the result list.\n    \n  \n  \n    \n      \n    \n  \n\n    \n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Search","preview":"Please activate JavaScript to enable the search\n      functionality.\n     \n      From here you can view your search results. Enter your search\n      words into the box at the top right of the page and","tags":""},{"slug":"supported-operations/","headings":[],"text":"Supported SQL Functions and Operators\nMongoDB Connector for BI Version 2.0.0 is compatible with SQL-99 SELECT statements.\nThe following tables list the various MySQL functions, constructors, and\noperators supported in MongoDB Connector for BI 2.0.0.\n\nSupported MySQL functions, constructors, and operators\n\nComparison Functions and Operators\nLogical Operators\nControl Flow Functions and Operators\nString Functions\nNumeric Functions and Operators\nDate and Time Functions\nCast Functions and Operators\nSubquery Constructors\nInformation Functions\nGROUP BY (Aggregate) Functions\nUtility Statements\nDatabase Administration Statements\n\n\n\nComparison Functions and Operators¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nBETWEEN ... AND ...\nCheck whether a value is within a range of values\n\nCOALESCE()\nReturn the first non-NULL argument\n\n=\nEqual operator\n\n<=>\nNULL-safe equal to operator\n\n>\nGreater than operator\n\n>=\nGreater than or equal operator\n\nGREATEST()\nReturn the largest argument\n\nIN()\nCheck whether a value is within a set of values\n\nIS\nTest a value against a boolean\n\nIS NOT\nTest a value against a boolean\n\nIS NOT NULL\nNOT NULL value test\n\nIS NULL\nNULL value test\n\nISNULL()\nTest whether the argument is NULL\n\nLEAST()\nReturn the smallest argument\n\n<\nLess than operator\n\n<=\nLess than or equal operator\n\nLIKE\nSimple pattern matching\n\nNOT BETWEEN ... AND ...\nCheck whether a value is not within a range of values\n\n!=, <>\nNot equal operator\n\nNOT IN()\nCheck whether a value is not within a set of values\n\n\n\n\n\nLogical Operators¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nAND, &&\nLogical AND\n\nNOT, !\nNegates value\n\n||, OR\nLogical OR\n\nXOR\nLogical XOR\n\n\n\n\n\nControl Flow Functions and Operators¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nCASE\nCase operator\n\nIF()\nIf/else construct\n\nIFNULL()\nNull if/else construct\n\nNULLIF()\nReturn NULL if expr1 = expr2\n\n\n\n\n\nString Functions¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nASCII()\nReturn numeric value of left-most character\n\nCHAR_LENGTH()\nReturn number of characters in argument\n\nCHARACTER_LENGTH()\nSynonym for CHAR_LENGTH()\n\nCONCAT()\nReturn concatenated string\n\nCONCAT_WS()\nReturn concatenate with separator\n\nELT()\nReturn string at index number\n\nINSERT()\nInsert a substring at the specified position up to the specified\nnumber of characters\n\nINSTR()\nReturn the index of the first occurrence of substring\n\nLCASE()\nSynonym for LOWER()\n\nLEFT()\nReturn the leftmost number of characters as specified\n\nLENGTH()\nReturn the length of a string in bytes\n\nLOCATE()\nReturn the position of the first occurrence of substring\n\nLOWER()\nReturn the argument in lowercase\n\nLTRIM()\nRemove leading spaces\n\nMID()\nReturn a substring starting from the specified position\n\nNOT LIKE\nNegation of simple pattern matching\n\nNOT REGEXP\nNegation of REGEXP\n\nREGEXP\nPattern matching using regular expressions\n\nREPLACE()\nReplace occurrences of a specified string\n\nRIGHT()\nReturn the specified rightmost number of characters\n\nRTRIM()\nRemove trailing spaces\n\nSPACE()\nReturn a string of the specified number of spaces\n\nSUBSTR()\nReturn the substring as specified\n\nSUBSTRING()\nReturn the substring as specified\n\nSUBSTRING_INDEX()\nReturn a substring from a string before the specified number of\noccurrences of the delimiter\n\nTRIM()\nRemove leading and trailing spaces\n\nUCASE()\nSynonym for UPPER()\n\nUPPER()\nConvert to uppercase\n\n\n\n\n\nNumeric Functions and Operators¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nABS()\nReturn the absolute value\n\nACOS()\nReturn the arc cosine\n\nASIN()\nReturn the arc sine\n\nATAN()\nReturn the arc tangent\n\nATAN2(), ATAN()\nReturn the arc tangent of the two arguments\n\nCEIL()\nReturn the smallest integer value not less than the argument\n\nCEILING()\nReturn the smallest integer value not less than the argument\n\nCOS()\nReturn the cosine\n\nCOT()\nReturn the cotangent\n\nDEGREES()\nConvert radians to degrees\n\nDIV\nInteger division\n\n/\nDivision operator\n\nEXP()\nRaise to the power of\n\nFLOOR()\nReturn the largest integer value not greater than the argument\n\nLN()\nReturn the natural logarithm of the argument\n\nLOG()\nReturn the natural logarithm of the first argument\n\nLOG10()\nReturn the base-10 logarithm of the argument\n\nLOG2()\nReturn the base-2 logarithm of the argument\n\n-\nMinus operator\n\nMOD()\nReturn the remainder\n\n%, MOD\nModulo operator\n\nPI()\nReturn the value of pi\n\n+\nAddition operator\n\nPOW()\nReturn the argument raised to the specified power\n\nPOWER()\nReturn the argument raised to the specified power\n\nRADIANS()\nReturn argument converted to radians\n\nROUND()\nRound the argument\n\nSIGN()\nReturn the sign of the argument\n\nSIN()\nReturn the sine of the argument\n\nSQRT()\nReturn the square root of the argument\n\nTAN()\nReturn the tangent of the argument\n\n*\nMultiplication operator\n\nTRUNCATE()\nTruncate to specified number of decimal places\n\n-\nChange the sign of the argument\n\n\n\n\n\nDate and Time Functions¶\n\n\n\n\n\n\nFunction/Operator\nDescription\n\n\n\nADDDATE()\nAdd time values (intervals) to a date value\n\nCURDATE()\nReturn the current date\n\nCURRENT_DATE(), CURRENT_DATE\nSynonyms for CURDATE()\n\nCURRENT_TIMESTAMP(), CURRENT_TIMESTAMP\nSynonyms for NOW()\n\nDATE()\nExtract the date part of a date or datetime expression\n\nDATE_ADD()\nAdd time values (intervals) to a date value\n\nDATE_FORMAT()\nFormat date as specified\n\nDATE_SUB()\nSubtract a time value (interval) from a date\n\nDAY()\nSynonym for DAYOFMONTH()\n\nDAYNAME()\nReturn the name of the weekday\n\nDAYOFMONTH()\nReturn the day of the month (0-31)\n\nDAYOFWEEK()\nReturn the weekday index of the argument\n\nDAYOFYEAR()\nReturn the day of the year (1-366)\n\nEXTRACT()\nExtract part of a date\n\nFROM_DAYS()\nConvert a day number to a date\n\nHOUR()\nExtract the hour\n\nLAST_DAY\nReturn the last day of the month for the argument\n\nMAKEDATE()\nCreate a date from the year and day of year\n\nMINUTE()\nReturn the minute from the argument\n\nMONTH()\nReturn the month from the date passed\n\nMONTHNAME()\nReturn the name of the month\n\nNOW()\nReturn the current date and time\n\nQUARTER()\nReturn the quarter from a date argument\n\nSECOND()\nReturn the second (0-59)\n\nSTR_TO_DATE()\nConvert a string to a date\n\nSUBDATE()\nSynonym for DATE_SUB() when invoked with three arguments\n\nTIME_TO_SEC()\nReturn the argument converted to seconds\n\nTIMEDIFF()\nSubtract time\n\nTIMESTAMP()\nWith a single argument, this function returns the date or datetime\n\nTIMESTAMPADD()\nAdd an interval to a datetime expression\n\nTIMESTAMPDIFF()\nSubtract an interval from a datetime expression\n\nTO_DAYS()\nReturn the date argument converted to days\n\nUTC_TIMESTAMP()\nReturn the current UTC date and time\n\nWEEK()\nReturn the week number\n\nWEEKDAY()\nReturn the weekday index\n\nWEEKOFYEAR()\nReturn the calendar week of the date (1-53)\n\nYEAR()\nReturn the year\n\nYEARWEEK()\nReturn the year and week\n\n\n\n\n\nCast Functions and Operators¶\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nCAST()\nCast a value as a certain type\n\nCONVERT()\nConvert a value as a certain type\n\n\n\n\n\nSubquery Constructors¶\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nROW()\nReturns one row of values rather than one column of values\n\n\n\n\n\nInformation Functions¶\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nCONNECTION_ID()\nReturn the connection ID (thread ID) for the connection\n\nCURRENT_USER(), CURRENT_USER\nThe authenticated user name and host name\n\nDATABASE()\nReturn the default (current) database name\n\nSCHEMA()\nSynonym for DATABASE()\n\nSESSION_USER()\nSynonym for USER()\n\nSYSTEM_USER()\nSynonym for USER()\n\nUSER()\nThe user name and host name provided by the client\n\nVERSION()\nReturn a string that indicates the MySQL server version\n\n\n\n\n\nGROUP BY (Aggregate) Functions¶\n\n\n\n\n\n\nFunction\nDescription\n\n\n\nAVG()\nReturn the average value of the argument\n\nCOUNT()\nReturn a count of the number of rows returned\n\nCOUNT(DISTINCT)\nReturn the count of a number of different values\n\nMAX()\nReturn the maximum value\n\nMIN()\nReturn the minimum value\n\nSTD()\nReturn the population standard deviation\n\nSTDDEV()\nReturn the population standard deviation\n\nSTDDEV_POP()\nReturn the population standard deviation\n\nSTDDEV_SAMP()\nReturn the sample standard deviation\n\nSUM()\nReturn the sum\n\n\n\n\n\nUtility Statements¶\n\n\n\n\n\n\nStatement\nDescription\n\n\n\nUSE <databaseName>\nChoose the database to use as the current database for subsequent statements\n\n\n\n\n\nDatabase Administration Statements¶\n\n\n\n\n\n\nStatement\nDescription\n\n\n\nSHOW CREATE TABLE <tableName>\nShows the structure of the <tableName> table. The structure\nincludes comments that describe the mapping from the SQL table and\ncolumns to MongoDB collection and fields.\n\nSHOW [GLOBAL | SESSION] STATUS [LIKE 'pattern' | WHERE expr]\nShows mongosqld server metrics. The structure contains\nnon-empty values for at least the following fields:\n\nBytes_received\nBytes_sent\nConnections\nQueries\nThreads_connected\nThreads_created\nUptime\n\nBy default the SHOW STATUS statement will only show statistics\nfor the current connection, corresponding to the SESSION\nqualifier. If you specify the GLOBAL qualifier,\nSHOW STATUS will instead show aggregate statistics for the\nentire server.\n\n\n\n\n\n\n\n                \n    \n      ←  \n      Release Notes for MongoDB Connector for BI\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Supported SQL Functions and Operators","preview":"MongoDB Connector for BI Version 2.0.0 is compatible with SQL-99 SELECT statements. The following tables list the various MySQL functions, constructors, and\noperators supported in MongoDB Connector fo","tags":""},{"slug":"tutorial/connecting-to-atlas/","headings":[],"text":"Using the MongoDB Connector for BI > \n          Using the MongoDB Connector for BI with Atlas \n      \n    \n  \n                \n                  \nUsing the MongoDB Connector for BI with Atlas\n\nOn this page\n\nmongodrdl\nmongosqld\n\n\nAtlas is a cloud service for\nrunning, monitoring, and maintaining MongoDB deployments, including the\nprovisioning of dedicated servers for the MongoDB instances.\nAtlas uses TLS/SSL to encrypt connections and enforces authentication by\ndefault. This page explains how to connect to Atlas using\nmongodrdl and mongosqld.\n\nNote\nWith the MongoDB Atlas free tier, MongoDB Connector for BI cannot run aggregation pipelines\nusing the allowDiskUse option. This option allows aggregation stages to\nwrite data as temporary files to disk. To review the MongoDB Atlas free\ntier constraints, see the MongoDB Atlas manual.\n\n\nmongodrdl¶\nTo create a DRDL file from an Atlas database, use the\nfollowing command format:\nmongodrdl --host <domain0>.mongodb.net:27017,<domain1>.mongodb.net:27017,... -u <username> -p <password> --ssl --authenticationDatabase=admin -d <database>\n\n\n\n\nmongosqld¶\nTo connect mongosqld to an Atlas cluster, you must provide a\n.pem key file.\nmongosqld can use any valid TLS certificate issued by a\ncertificate authority, or a self-signed certificate. If you use a\nself-signed certificate, although the communications channel will be\nencrypted, there will be no validation of server identity. Although\nsuch a situation will prevent eavesdropping on the connection, it\nleaves you vulnerable to a man-in-the-middle attack. Using a\ncertificate signed by a trusted certificate authority will permit your\nMySQL client to verify the server’s identity.\nFor testing purposes, you can create a .pem key file named test.pem\nusing the openssl tool:\nopenssl req -nodes -newkey rsa:2048 -keyout test.key -out test.crt -x509 -days 365 -subj \"/C=US/ST=test/L=test/O=test Security/OU=IT Department/CN=test.com\"\ncat test.crt test.key > test.pem\n\n\nStart mongosqld with the --auth and\n--sslPEMKeyFile options.\nIf you named your key file test.pem as in the previous example, you\ncan run the following, substituting your schema file and\ncluster URI:\n\nNote\nDo not specify a username and password in --mongo-uri. The\nconnection string should only contain the list of servers.\n\nmongosqld --mongo-ssl --auth --sslPEMKeyFile test.pem --schema <schema.drdl> --mongo-uri <uri>\n\n\nPass your username, password, and authentication database to your SQL\nclient. For example, using mysql without verifying your mongosqld\nserver certificate:\nmysql --host <mongosqld-host> --port <mongosqld-port> -u <username>?source=admin -p --ssl-mode required --enable-cleartext-plugin\n\n\nRefer to Connect with the MySQL Client for more details on using the\nmysql client with the MongoDB Connector for BI.\n\n\n\n                \n    \n      ←  \n      Connecting to the MongoDB Connector for BI\n      MongoDB Connector for BI Components\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Using the MongoDB Connector for BI with Atlas","preview":"On this page Atlas is a cloud service for\nrunning, monitoring, and maintaining MongoDB deployments, including the\nprovisioning of dedicated servers for the MongoDB instances. Atlas uses TLS/SSL to enc","tags":""},{"slug":"tutorial/connecting/","headings":[],"text":"Using the MongoDB Connector for BI > \n          Connecting to the MongoDB Connector for BI \n      \n    \n  \n                \n                  \nConnecting to the MongoDB Connector for BI\n\nOn this page\n\nAuthentication\nConnect with the MySQL Client\nConnect with Tableau\n\n\n\nAuthentication¶\n\nNew in version 2.2: The MongoDB Connector for BI now offers MySQL authentication plugins allowing you to\nconnect with authentication but without TLS/SSL.\n\nThe MongoDB Connector for BI requires authentication when running with --auth.\nWhen the MongoDB Connector for BI receives a connection with authentication credentials\nfrom a client, it passes those credentials through to the underlying\nMongoDB instance.\nYou can specify the following authentication options after your\nusername as URI-style query parameters:\n\n\n\n\n\n\nConnection Option\nDescription\n\n\n\n\n\nsource¶\n\n\n\nSpecify the name of the database which stores the user’s\ncredentials. If you do not specify this option, the MongoDB Connector for BI will\ndefault to the current database associated with the MySQL\nconnection.\nFor authentication mechanisms such as PLAIN (LDAP) that\ndelegate credential storage to other services, set the\nsource value to $external.\n\n\n\n\nmechanism¶\n\n\n\nSpecify the mechanism that the MongoDB Connector for BI should use to\nauthenticate the connection. Possible values include:\n\nSCRAM-SHA-1\nMONGODB-CR\nPLAIN (LDAP SASL)\n\nThe PLAIN (LDAP) mechanism requires MongoDB Enterprise, and\nrequires that source be $external.\n\n\n\n\nFor example, to authenticate as the user grace with authentication\nmechanism PLAIN and using an external source, you would use the\nfollowing username:\ngrace?mechanism=PLAIN&source=$external\n\n\n\n\nConnect with the MySQL Client¶\nYou can use the command-line MySQL client to connect to the MongoDB Connector for BI.\n\nConnect from MySQL without Authentication or TLS/SSL¶\nTo connect to a mongosqld instance listening on the MySQL\ndefault port 3307, run the following command:\nmysql --protocol tcp --port 3307\n\n\n\n\nConnect from MySQL with Authentication¶\nFirst install the authentication plugin as described on\n/tutorials/install-auth-plugin-c.\n\n\nConnect from MySQL with Authentication and TLS/SSL¶\nTo connect to a mongosqld instance listening on port 3307,\nas user grace using authentication mechanism PLAIN, and using\nspecific TLS/SSL CA and x.509 certificates, run the following command:\nmysql --enable-cleartext-plugin --protocol tcp --port 3307 \\\n  -u 'grace?mechanism=PLAIN&source=$external' \\\n  --ssl-ca=/path_to_the_CAcert/ca.crt \\\n  --ssl-key=/path_to_my_certificate_key/mysql.key \\\n  --ssl-cert=/path_to_my_client_certificate/mysql.crt \\\n  -p\n\n\nIf using the $external authentication source, wrap your username in\nsingle quotes or escape the $ character with a backslash to prevent\nyour shell from performing interpolation.\nAuthentication requires your client to send your password in plain\ntext. To send the password in plain text, either:\n\nUse the --enable-cleartext-plugin option shown in the\nprevious example, or\nSet the environment variable LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1.\n\nSee the\nMySQL documentation\nfor additional details on enabling the MySQL cleartext plugin.\n\n\n\nConnect with Tableau¶\n\nConnect from Tableau without Authentication or TLS/SSL¶\nClick on the MySQL named connection in Tableau’s left hand\ncolumn. Enter the host and port on which mongosqld is\nlistening, and click Sign In to connect.\nBy default, mongosqld binds to port 3307.\n\n\n\n\n\nConnect from Tableau with Authentication and TLS/SSL¶\nTo connect Tableau to the MongoDB Connector for BI using TLS/SSL, you must configure\nTableau to send passwords in clear text either by using\na Tableau Datasource Connection (TDC) file, or by setting the\nLIBMYSQL_ENABLE_CLEARTEXT_PLUGIN environment variable.\n\nUsing a TDC File¶\n\n1\nConfigure Tableau Datasource Connection.¶\nThe TDC file is a convenient way to enable the cleartext plugin and\nspecify all of mongosqld’s TLS/SSL certificates and keys.\nTo create a TDC file that can connect to the MongoDB Connector for BI with authentication\nover TLS/SSL, modify the following TDC file template. Substitute\nSSLKEY, SSLCERT, and SSLCA appropriately:\n<?xml version='1.0' encoding='utf-8' ?>\n<connection-customization class='mysql' version='7.7' enabled='true'>\n    <vendor name='mysql' />\n    <driver name='mysql' />\n    <customizations>\n      <customization\n        name='odbc-connect-string-extras'\n        value='SSLKEY={C:\\path_to_key\\mysql.key};SSLCERT={C:\\path_to_cert\\mysql.crt};SSLCA={C:\\path_to_CAcert\\ca.crt};ENABLE_CLEARTEXT_PLUGIN=1;SSL_ENFORCE=1' />\n      </customizations>\n</connection-customization>\n\n\nSave this XML as a .tdc file in the Datasources directory of\nyour Tableau Repository. On Windows this is typically\nC:\\Users\\<username>\\Documents\\My Tableau Repository\\Datasources. On\nOS X, this is ~/Documents/My Tableau Repository/Datasources.\n\nImportant\nYou must restart Tableau to apply the TDC.\nTableau will apply the TLS/SSL, certificate, and cleartext plugin\nsettings in the TDC file to every connection matching the named\ndatabase vendor and driver.\n\n\n2\nConnect using Tableau.¶\nClick on the MySQL named connection in Tableau’s left\nhand column. Enter the host and port on which mongosqld is\nlistening, along with the username and password with which to\nauthenticate. Click Sign In to connect.\nBy default, mongosqld binds to port 3307.\n\n\n\n\n\nUsing an Environment Variable¶\n\n1\nStart Tableau.¶\n\nOS X\nOpen a terminal window and execute the following command:\nLIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1 /Applications/Tableau.app/Contents/MacOS/Tableau\n\n\n\nWindows\nAdd the LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN=1 environment variable\nto your user environment.\nTo do this, open a Command Prompt. Press the Win key,\ntype cmd.exe, and press Enter. Then execute the following\ncommand:\nSETX LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN 1\n\n\nSETX should respond with the following:\nSUCCESS: Specified value was saved.\n\n\nThen start Tableau.\n\n\n\n2\nConnect using Tableau.¶\nClick on the MySQL named connection in Tableau’s left\nhand column. Enter the host and port on which mongosqld is\nlistening, along with the username and password with which to\nauthenticate. Click Sign In to connect.\nBy default, mongosqld binds to port 3307.\n\n\n\n\n\n\n\n\n                \n    \n      ←  \n      Using the MongoDB Connector for BI\n      Using the MongoDB Connector for BI with Atlas\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Connecting to the MongoDB Connector for BI","preview":"On this page New in version 2.2: The MongoDB Connector for BI now offers MySQL authentication plugins allowing you to\nconnect with authentication but without TLS/SSL. The MongoDB Connector for BI requ","tags":""},{"slug":"tutorial/install-auth-plugin-c/","headings":[],"text":"Installation > \n          Install the C Authentication Plugin \n      \n    \n  \n                \n                  \nInstall the C Authentication Plugin\n\nNew in version 2.2.\n\nThe MongoDB Connector for BI provides a MySQL authentication plugin implementing the\nclient side of MongoDB-supported authentication mechanisms.\nThis plugin supports the following mechanisms:\n\nSCRAM-SHA-1\nPLAIN\n\n\nInstallation¶\n\nWindows¶\nInstall the mongosql_auth plugin component provided by the MongoDB Connector for BI\n.msi installer.\n\n\nMacOS and Linux¶\nThe plugin library (mongosql_auth.so) should be installed in\n<mysql-home>/lib/plugin/. The default location of <mysql-home>\nvaries by platform, but the location of the plugin directory can be\nverified by running mysql_config -plugindir.\nAlternatively, the plugin can be installed in a directory of your choice\nif you provide the plugin-dir=<your-install-dir> option to your\nMySQL lient.\n\n\n\nUsage¶\n\nParameters¶\nOptionally, specify the authentication mechanism via a query parameter\non the user name. The default mechanism is SCRAM-SHA-1. For example:\nusername?mechanism=PLAIN\n\n\nOptionally, specify the authentication source via a query parameter on\nthe user name. The default source is admin for SCRAM-SHA-1 and\n$external or PLAIN. For example:\nusername?source=somedb\n\n\n\n\ndefault-auth¶\nTo authenticate with mongosqld using the mongosql_auth\nplugin, you will need to provide the default-auth=mongsql_auth\noption to your MySQL lient. There are a number of ways to accomplish\nthis, depending on which client program you are using.\n\nCommand-Line Flag¶\nWith the MySQL shell, the default-auth option can be specified as follows:\nmysql -u<username> -p<password> --default-auth=mongosql_auth\n\n\n\n\nODBC Connection Parameter¶\nIf you are using the MySQL ODBC driver, the interface you use to\nconfigure your DSN may provide a field where you can specify the default\nauth plugin to use. Specifying mongosql_auth here will cause the\nODBC driver to use the mongosql_auth plugin by default.\n\n\nConfiguration File¶\nMySQL configuration files can be found in many locations, as listed\nin the MySQL documentation.\nIn one of these files, add a line with default-auth=mongosql_auth to\nthe [client] section (or create it if it doesn’t yet exist).\nTo use this same configuration file with an ODBC DSN, provide the\nUSE_MYCNF=1 connection parameter to your ODBC DSN.\n\n\n\n\nNotes¶\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the client\nplugin, so it can be used on an unencrypted connection without exposing\nthe password.\nThe PLAIN mechanism sends the password in cleartext, so should\nonly be used on an encrypted connection, though this is not enforced.\n\n\n\n\n                \n    \n      ←  \n      Installation\n      Install the JDBC Authentication Plugin\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Install the C Authentication Plugin","preview":"New in version 2.2. The MongoDB Connector for BI provides a MySQL authentication plugin implementing the\nclient side of MongoDB-supported authentication mechanisms. This plugin supports the following ","tags":""},{"slug":"tutorial/install-auth-plugin-jdbc/","headings":[],"text":"Installation > \n          Install the JDBC Authentication Plugin \n      \n    \n  \n                \n                  \nInstall the JDBC Authentication Plugin\n\nOn this page\n\nUsage\nNodes\n\n\n\nNew in version 2.2.\n\nThe MongoDB Connector for BI provides a JDBC authentication plugin implementing the\nclient side of MongoDB-supported authentication mechanisms.\nThis plugin supports the following mechanisms:\n\nSCRAM-SHA-1\nPLAIN\nGSSAPI\n\n\nUsage¶\nInclude this library in the classpath.  The Maven coordinates are:\n<dependency>\n    <groupId>org.mongodb</groupId>\n    <artifactId>mongosql-auth-mysql</artifactId>\n    <version>1.0-SNAPSHOT</version>\n</dependency>\n\n\nNext, add a reference to the authentication plugin via the MySQL\nconnection string:\njdbc:mysql://127.0.0.1:3307?useSSL=false&authenticationPlugins=org.mongodb.mongosql.auth.plugin.MongoSqlAuthenticationPlugin\n\n\nOptionally, specify the authentication mechanism via a query parameter\non the user name.  The default mechanism is SCRAM-SHA-1. For example:\nusername?mechanism=GSSAPI\n\n\nOptionally, specify the authentication source via a query parameter on\nthe user name.  The default source is admin for SCRAM-SHA-1 and\nMONGODB-CR, and $external for PLAIN and GSSAPI. For\nexample:\nusername?source=somedb\n\n\n\n\nNodes¶\n\nThe SCRAM-SHA-1 mechanism hashes the passwords in the client plugin,\nso it can be used on an unencrypted connection without exposing  the\npassword.\nThe PLAIN mechanism sends the password in cleartext, so should only be\nused on an encrypted connection, though this is not enforced.\n\n\n\n\n                \n    \n      ←  \n      Install the C Authentication Plugin\n      Schema Configuration\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Install the JDBC Authentication Plugin","preview":"On this page New in version 2.2. The MongoDB Connector for BI provides a JDBC authentication plugin implementing the\nclient side of MongoDB-supported authentication mechanisms. This plugin supports th","tags":""},{"slug":"tutorial/using-the-bi/","headings":[],"text":"Using the MongoDB Connector for BI\nConnecting to the MongoDB Connector for BI describes the process of connecting to the\nMongoDB Connector for BI with different tools.\nUsing the MongoDB Connector for BI with Atlas describes the process of connecting\nthe MongoDB Connector for BI to a MongoDB cluster hosted on\nAtlas.\n\n\nConnecting to the MongoDB Connector for BI\nUsing the MongoDB Connector for BI with Atlas\n\n\n\n\n                \n    \n      ←  \n      Schema Configuration\n      Connecting to the MongoDB Connector for BI\n       →\n    \n                  \n                    \n                      © MongoDB, Inc 2008-2017. MongoDB, Mongo, and the leaf logo are registered trademarks of MongoDB, Inc.","title":"Using the MongoDB Connector for BI","preview":"Connecting to the MongoDB Connector for BI describes the process of connecting to the\nMongoDB Connector for BI with different tools. Using the MongoDB Connector for BI with Atlas describes the process","tags":""}]}
